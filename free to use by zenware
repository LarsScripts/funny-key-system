loadstring(game:HttpGet("https://raw.githubusercontent.com/LarsScripts/funny-key-system/refs/heads/main/booting",true))()
--This is the whitelist so bassicly the existing users.
local whitelist = {
    ["example"] = "ZenWareIsBest",
    ["example"] = "pass1234",
    ["example"] = "mypassword"
}

local function onLoginButtonClick()
    local username = usernameBox.Text
    local password = passwordBox.Text

    if whitelist[username] and whitelist[username] == password then
        screenGui:Destroy()
        print("Login successful!")
        -- paste here whatever happens after sigma succesfully logs in so for example a loadstring of you script
    else
        usernameBox.Text = ""
        passwordBox.Text = ""
        maskedLabel.Text = ""
        print("Invalid username or password.")
    end
end

loginButton.MouseButton1Click:Connect(onLoginButtonClick)

local function updateMaskedLabel()
    maskedLabel.Text = string.rep("*", #passwordBox.Text)  -- Update with masked characters
end

passwordBox:GetPropertyChangedSignal("Text"):Connect(updateMaskedLabel)
passwordBox.Focused:Connect(function()
    maskedLabel.Visible = false
end)
passwordBox.FocusLost:Connect(function()
    maskedLabel.Visible = true
    updateMaskedLabel()
end)

local dragging
local dragInput
local dragStart
local startPos

local function updateInput(input)
    local delta = input.Position - dragStart
    frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

titleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        updateInput(input)
    end
end)
